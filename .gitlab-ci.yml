# Default to python image for every job
# Uses the same python version the docker image is built with
image: python:3.10.7

# # We only want to run the pipeline on the default branch
# workflow:
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - test
  - build

# Before script hook for each job to setup dependencies, tried using caching 
# to speed up subsequent jobs but needs more testing so not important right now
before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - mkdir ${CI_PROJECT_DIR}/dependencies/
  - cd build_helpers && ./install_ta-lib.sh ${CI_PROJECT_DIR}/dependencies/; cd ..
  - |
    python -m pip install --upgrade pip wheel
    export LD_LIBRARY_PATH=${CI_PROJECT_DIR}/dependencies/lib:$LD_LIBRARY_PATH
    export TA_LIBRARY_PATH=${CI_PROJECT_DIR}/dependencies/lib
    export TA_INCLUDE_PATH=${CI_PROJECT_DIR}/dependencies/include
    pip install -r requirements-dev.txt
    pip install -e .

# Run pytest
run-pytest:
  stage: test
  script: pytest --random-order --cov=freqtrade --cov-config=.coveragerc

# Run flake8
run-flake8:
  stage: test
  script: flake8 freqtrade

# Run isort
run-isort:
  stage: test
  script: isort --check freqtrade

# Run mypy
run-mypy:
  stage: test
  script: mypy freqtrade scripts tests

# Build the docker image and push to the gitlab container registry
docker-build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script: [] # Ignore global before_script
  script:
    - echo "$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA" > "./freqtrade_commit"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-latest" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE" --all-tags
